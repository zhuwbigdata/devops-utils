---
# Copy original JKS /opt/cloudera/jks/$host-keystore.jks to
# signed JKS /opt/cloudera/jks/$host-signed-keystore.jks.
# Remove existing rootCA chain and server certificate in signed JKS if any.
# Import rootCA chain to signed JKS from rootCAChain directory,
# then import private key with signed certificate in signed JKS.
# Once done, signed JKS should be root CA chain, private key with signed certificate.

- name: CERT file (input)
  set_fact: cert_path={{ base_dir }}/{{ SERVER_FQDN }}/{{ certs_staging }}/{{ SERVER_FQDN }}{{ cert_file }}

- debug: var=cert_path

- name: Original keystore file (input)
  set_fact: jks_path={{ base_dir }}/{{ SERVER_FQDN }}/{{ jks_staging }}/{{ SERVER_FQDN }}{{ keystore_file }}

- debug: var=jks_path

- name: Staging p12 keystore file (output)
  set_fact: signed_p12ks_path={{ base_dir }}/{{ SERVER_FQDN }}/{{ jks_staging }}/{{ SERVER_FQDN }}{{ keystore_file_signed_p12 }}

- debug: var=signed_p12ks_path

- name: unsigned private key file in x509 (output)
  set_fact: unsigned_private_key_path={{ base_dir }}/{{ SERVER_FQDN }}/{{ x509_staging }}/{{ SERVER_FQDN }}{{ unsigned_privarte_key_file }}

- debug: var=unsigned_private_key_path

- name: signed JKS file (output)
  set_fact: signed_jks_path={{ base_dir }}/{{ SERVER_FQDN }}/{{ jks_staging }}/{{ SERVER_FQDN }}{{ keystore_signed_file }}

- debug: var=signed_jks_path

- name: Export unsigned private key, signed cerificate and rootCA chain to signed PKCS12 keystore
  command: "openssl pkcs12 -export -out {{ signed_p12ks_path }} -inkey {{ unsigned_private_key_path }} -in {{ cert_path }} -CApath {{ rootca_path }}  -name {{ SERVER_FQDN }} -passin pass:{{ ks_pwd }} -passout pass:{{ ks_pwd }}"
  register: pout

- debug: var=pout

- name: Replicate unsigned JKS to signed JKS
  copy: src={{ jks_path }} dest={{ signed_jks_path }}

- name: Remove server certificate in signed JKS
  command: "{{ java_home }}/bin/keytool -noprompt -delete -alias {{ SERVER_FQDN }} -keystore {{ signed_jks_path }} -storepass {{ ks_pwd }}"
  register: pout
  ignore_errors: yes
- debug: var=pout

- name: Import rootCA chain in signed JKS
  command: "{{ java_home }}/bin/keytool -noprompt -importcert -trustcacerts -alias {{ item2.alias }}  -file {{ base_dir }}/{{ rootca_chain_path }}/{{ item2.name }} -keystore {{ signed_jks_path }} -storepass {{ ks_pwd }} -keypass {{ ks_pwd }}"
  with_items:
    - "{{ rootca_certs }}"
  loop_control:
    loop_var: item2
  register: pout
- debug: var=pout

- name: Import private key with signed certficate to signed JKS
  command: "{{ java_home }}/bin/keytool -importkeystore -alias {{ SERVER_FQDN }} -srckeystore {{ signed_p12ks_path }} -srcstoretype PKCS12 -srcstorepass {{ ks_pwd }} -srckeypass {{ ks_pwd }} -deststorepass {{ ks_pwd }} -destkeypass {{ ks_pwd }} -destkeystore {{ signed_jks_path }} "
  register: pout
- debug: var=pout

- name: Check signed JKS
  command: "{{ java_home }}/bin/keytool -list -v -keystore {{ signed_jks_path }} -storepass {{ ks_pwd }}"
  register: pout
- debug: var=pout

- name: Remove staging PKCS12 keystore file
  file: path={{ signed_p12ks_path }} state=absent
